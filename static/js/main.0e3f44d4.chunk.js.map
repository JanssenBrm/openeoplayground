{"version":3,"sources":["components/Jobs/Jobs.module.css","components/Processes/Processes.module.css","services/OpenEO.tsx","components/Services/Services.module.css","components/Sidebar/Sidebar.module.css","components/Processes/Params/GeometryParam/GeometryParam.module.css","components/Processes/Params/IntervalParam/IntervalParam.module.css","components/Map/Map.module.css","components/Toasts/Toast.module.css","stores/ui/ui.model.tsx","stores/params/params.model.tsx","stores/params/index.tsx","stores/ui/index.tsx","components/Toasts/toast.model.tsx","components/Map/Layers/DrawLayer.tsx","components/Map/Map.tsx","components/Sidebar/Sidebar.tsx","components/Toasts/Toasts.tsx","services/Utils.t.tsx","components/Jobs/Jobs.tsx","components/Processes/Params/DateTime/DataTimeParam.tsx","components/Processes/Params/IntervalParam/IntervalParam.tsx","components/Processes/Params/GeometryParam/GeometryParam.tsx","components/Processes/Params/StringParam/StringParam.tsx","components/Processes/Params/NumberParam/NumberParam.tsx","components/Processes/Processes.tsx","components/Services/Services.tsx","App.tsx","reportWebVitals.ts","stores/app.tsx","index.tsx"],"names":["module","exports","OPENEO_BASE","OPENEO_USERNAME","OPENEO_PASSWORD","getToken","username","password","fetch","headers","Authorization","Buffer","from","toString","then","response","json","tokens","access_token","createAuthHeader","token","buildProcessGraph","service","serviceexecute1","process_id","id","namespace","arguments","parameters","reduce","result","p","name","value","save","data","from_node","format","buildJobGraph","title","description","process","process_graph","buildServiceGraph","type","enabled","getProcesses","processes","map","param","default","createPreviewService","a","method","body","JSON","stringify","get","location","status","Error","executeProcess","getJobs","jobs","Promise","all","j","info","sort","j1","j2","Date","created","getServices","services","s","console","log","getLogs","logs","filter","l","message","time","level","toUpperCase","downloadJobResult","mode","text","parse","replace","assets","Object","keys","filename","url","href","results","r","res","blob","window","URL","createObjectURL","open","UiInteractionType","UI_INITIAL_STATE","interaction","NONE","toasts","PARAMS_INITIAL_STATE","feature","undefined","paramsSlice","createSlice","initialState","reducers","setFeature","state","action","payload","setProcess","updateProcessParam","actions","uiSlice","setInteractionType","addToast","duration","removeToast","t","DrawLayer","props","dispatch","useDispatch","useMap","useState","geometry","setGeometry","drawRef","useRef","layerRef","useSelector","params","useEffect","current","removeControl","addControl","clearLayers","FeatureGroup","ref","onMounted","ctl","onCreated","event","layer","toGeoJSON","position","draw","polyline","polygon","rectangle","circle","marker","circlemarker","Map","interactionType","ui","MapContainer","className","styles","center","zoom","zoomControl","TileLayer","Sidebar","useLocation","SidebarContainer","Header","Title","SubTitle","Routes","routes","Route","pathname","route","ActiveRoute","join","to","icon","RouteLabel","label","Toasts","scheduled","forEach","includes","setTimeout","ToastContainer","Alert","variant","CamelCase","charAt","slice","_getJobs","setJobs","setLoading","finally","Jobs","loading","expanded","setExpanded","setLogs","_getLogs","JobsContainer","JobsHeader","Button","onClick","disabled","Spinner","animation","JobList","Job","toggleExpanded","JobRow","JobDate","JobInfo","JobTitle","JobDescription","JobActions","JobDuration","duration_human_readable","JobLogs","length","DateTimeParam","onChange","setValue","timeFormat","dateFormat","IntervalParam","interval","setInterval","IntervalContainer","DateSelector","GeometryParam","GeomParam","Geom","Icon","POLYGON","Type","StringParam","Form","Control","target","NumberParam","renderServiceInfo","previewLoading","setPreviewLoading","showGraph","setShowGraph","ServiceInfo","ServiceTitle","Description","renderParam","Execute","ExecuteButton","paramsValid","_executeService","_generatePreview","ProcessGraph","ProcessGraphToggle","src","ClipboardCopy","navigator","clipboard","writeText","copyToClipboard","catch","error","updateParam","Param","ParamInput","schema","Processes","setServices","execLoading","setExecLoading","selected","ServiceContainer","ServiceSelect","as","find","updateSelected","renderServiceSelect","_getServices","Services","ServicesContainer","ServicesHeader","ServiceList","Service","ServiceRow","ServiceDate","ServiceDescription","App","document","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","uiReducer","paramsReducer","ReactDOM","StrictMode","store","app","getElementById"],"mappings":"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","file":"static/js/main.0e3f44d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"JobsContainer\":\"Jobs_JobsContainer__1kJiJ\",\"JobList\":\"Jobs_JobList__3PZPx\",\"Job\":\"Jobs_Job__3qeBo\",\"JobLogs\":\"Jobs_JobLogs__2mBP9\",\"JobDate\":\"Jobs_JobDate__4My8y\",\"JobDuration\":\"Jobs_JobDuration__1QbND\",\"JobDescription\":\"Jobs_JobDescription__3KdWU\",\"JobInfo\":\"Jobs_JobInfo__2eN0n\",\"JobActions\":\"Jobs_JobActions__GECly\",\"JobRow\":\"Jobs_JobRow__1v2SJ\",\"JobsHeader\":\"Jobs_JobsHeader__1G2XR\",\"JobTitle\":\"Jobs_JobTitle__1SJnm\",\"Finished\":\"Jobs_Finished__M4mEY\",\"Created\":\"Jobs_Created__29jyJ\",\"Running\":\"Jobs_Running__1Cdxp\",\"Queued\":\"Jobs_Queued__3PcM5\",\"Failed\":\"Jobs_Failed__dVx-v\",\"Error\":\"Jobs_Error__2Gkrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Services\":\"Processes_Services__2jU4k\",\"ServiceContainer\":\"Processes_ServiceContainer__2jwxB\",\"ServiceSelect\":\"Processes_ServiceSelect__3iSkL\",\"ServiceInfo\":\"Processes_ServiceInfo__ajy-z\",\"ServiceTitle\":\"Processes_ServiceTitle__bpEkc\",\"Title\":\"Processes_Title__1mgu5\",\"Description\":\"Processes_Description__2ZiQA\",\"Param\":\"Processes_Param__-eV3k\",\"ParamInput\":\"Processes_ParamInput__1XjGM\",\"Execute\":\"Processes_Execute__2Lqm8\",\"ExecuteButton\":\"Processes_ExecuteButton__qfTwM\",\"ProcessGraph\":\"Processes_ProcessGraph__P-o5s\",\"ProcessGraphToggle\":\"Processes_ProcessGraphToggle__3RpEN\",\"ClipboardCopy\":\"Processes_ClipboardCopy__oddG5\"};","import {OpenEOProcess, OpenEOProcessParam} from \"../interfaces/OpenEOProcess\";\n\n\nconst OPENEO_BASE = 'https://openeo.vito.be/openeo/1.0/'\nconst OPENEO_USERNAME = 'marketplace_user'\nconst OPENEO_PASSWORD = 'marketplace_user123'\n\nconst getToken = (username: string, password: string): Promise<string> =>\n    fetch(`${OPENEO_BASE}credentials/basic`, {\n        headers: {\n            Authorization: `Basic ${Buffer.from(username + \":\" + password).toString('base64')}`\n        }\n    })\n        .then((response: Response) => response.json())\n        .then((tokens: any) => tokens.access_token)\n\n\nconst createAuthHeader = (token: string): any => ({\n    Authorization: `Bearer ${token}`\n})\n\nexport const buildProcessGraph = (service: OpenEOProcess): any => ({\n        serviceexecute1: {\n            process_id: `${service.id}`,\n            namespace: 'vito',\n            arguments: {\n                ...service.parameters.reduce((result: any, p: OpenEOProcessParam) => {\n                    result[p.name] = p.value;\n                    return result;\n                }, {})\n            }\n        },\n        save: {\n            process_id: 'save_result',\n            arguments: {\n                data: {\n                    from_node: 'serviceexecute1'\n                },\n                format: \"GTiff\"\n            },\n            result: true\n        }\n    }\n);\n\nconst buildJobGraph = (service: OpenEOProcess): any => ({\n    title: `OpenEO Job Execution - ${service.id}`,\n    description: `${service.description}`,\n    process: {\n        process_graph: buildProcessGraph(service)\n    }\n})\n\nconst buildServiceGraph = (service: OpenEOProcess): any => ({\n    ...buildJobGraph(service),\n    type: 'wmts',\n    enabled: true\n})\n\nexport const getProcesses = (): Promise<OpenEOProcess[]> => {\n    return getToken(OPENEO_USERNAME, OPENEO_PASSWORD)\n        .then((token: string) => fetch(`${OPENEO_BASE}processes/vito`, {\n            headers: {\n                ...createAuthHeader(token)\n            }\n        }))\n        .then((response: Response) => response.json())\n        .then((data: any) => data.processes)\n        .then((processes: OpenEOProcess[]) => processes.map((p: OpenEOProcess) => ({\n            ...p,\n            parameters: p.parameters.map((param: OpenEOProcessParam) => ({\n                ...param,\n                value: param.default\n            }))\n        })));\n};\n\nexport const createPreviewService = async (service: OpenEOProcess): Promise<any> => {\n    const token = await getToken(OPENEO_USERNAME, OPENEO_PASSWORD);\n    const location = await fetch(`${OPENEO_BASE}services`, {\n        headers: {\n            ...createAuthHeader(token),\n            'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(buildServiceGraph(service))\n    }).then((response: Response) => response.headers.get('Location') || '');\n\n    if (location !== '') {\n        return await fetch(`${location}/results`, {\n            headers: {\n                ...createAuthHeader(token),\n            },\n            method: 'POST'\n        }).then((response: Response) => {\n            if (response.status === 400) {\n                throw new Error(`Could not get results`);\n            }\n            return response.json();\n        });\n    } else {\n        throw new Error(`Could not create viewing service`);\n    }\n}\n\nexport const executeProcess = async (service: OpenEOProcess): Promise<string> => {\n    const token = await getToken(OPENEO_USERNAME, OPENEO_PASSWORD);\n    const location = await fetch(`${OPENEO_BASE}jobs`, {\n        headers: {\n            ...createAuthHeader(token),\n            'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(buildJobGraph(service))\n    }).then((response: Response) => response.headers.get('Location') || '');\n\n    if (location !== '') {\n        return await fetch(`${location}/results`, {\n            headers: {\n                ...createAuthHeader(token),\n            },\n            method: 'POST'\n        }).then((response: Response) => {\n            if (response.status === 400) {\n                throw new Error(`Could not get results`);\n            }\n            return location\n        });\n    }\n    return location;\n}\n\nexport const getJobs = async (): Promise<any> => {\n    const token = await getToken(OPENEO_USERNAME, OPENEO_PASSWORD);\n\n    const jobs = await fetch(`${OPENEO_BASE}jobs`, {\n        headers: {\n            ...createAuthHeader(token),\n        },\n    })\n        .then((response: Response) => response.json())\n        .then((data: any) => data.jobs)\n        .then((jobs: any[]) => Promise.all(\n            jobs.map((j: any) =>\n                fetch(`${OPENEO_BASE}jobs/${j.id}`, {\n                    headers: {\n                        ...createAuthHeader(token),\n                    },\n                })\n                    .then((response: Response) => response.json())\n                    .then((info: any) => ({\n                        ...j,\n                        ...info\n                    }))\n            )\n        ))\n        .then((jobs: any[]) => jobs.sort((j1, j2) => new Date(j1.created) < new Date(j2.created) ? 1 : -1));\n    return jobs;\n}\n\nexport const getServices = async (): Promise<any> => {\n    const token = await getToken(OPENEO_USERNAME, OPENEO_PASSWORD);\n\n    const services = await fetch(`${OPENEO_BASE}services`, {\n        headers: {\n            ...createAuthHeader(token),\n        },\n    })\n        .then((response: Response) => response.json())\n        .then((data: any) => data.services)\n        .then((services: any[]) => Promise.all(\n            services.map((s: any) =>\n                fetch(`${OPENEO_BASE}services/${s.id}`, {\n                    headers: {\n                        ...createAuthHeader(token),\n                    },\n                })\n                    .then((response: Response) => response.json())\n                    .then((info: any) => ({\n                        ...s,\n                        ...info\n                    }))\n            )\n        ))\n    console.log(services);\n    return services;\n}\n\nexport const getLogs = async (id: string): Promise<string[]> => {\n    const token = await getToken(OPENEO_USERNAME, OPENEO_PASSWORD);\n\n    const logs = await fetch(`${OPENEO_BASE}jobs/${id}/logs`, {\n        headers: {\n            ...createAuthHeader(token),\n        },\n    })\n        .then((response: Response) => response.json())\n        .then((data: any) => data.logs)\n        .then((logs: any) => logs.filter((l: any) => l.message).map((l: any) => `${l.time} - ${l.level.toUpperCase()} - ${l.message}`))\n\n    return logs;\n}\n\nexport const downloadJobResult = async (id: string): Promise<any> => {\n    const token = await getToken(OPENEO_USERNAME, OPENEO_PASSWORD);\n\n    const results = await fetch(`${OPENEO_BASE}jobs/${id}/results`, {\n        mode: 'cors',\n        headers: {\n            ...createAuthHeader(token),\n        },\n    })\n        .then((response: Response) => response.text())\n        .then((data: string) => JSON.parse(data.replace('NaN', `\"NaN\"`)).assets)\n        .then((assets: any) => Object.keys(assets).map((a: string) => ({\n            filename: a,\n            url: assets[a].href\n        })));\n\n    await Promise.all(\n        results.map((r: any) => fetch(r.url, {\n                headers: {\n                    ...createAuthHeader(token),\n                },\n            })\n                .then((res: Response) => {\n                    return res.blob();\n                }).then((blob: Blob) => {\n                    const href = window.URL.createObjectURL(blob);\n                    window.open(href, '_blank');\n                })\n        )\n    )\n\n    return results;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ServicesContainer\":\"Services_ServicesContainer__2Xkj5\",\"ServiceList\":\"Services_ServiceList__32uXa\",\"Service\":\"Services_Service__11eSa\",\"ServiceLogs\":\"Services_ServiceLogs__3aKC1\",\"ServiceDate\":\"Services_ServiceDate__2WRwT\",\"ServiceDuration\":\"Services_ServiceDuration__18rtT\",\"ServiceDescription\":\"Services_ServiceDescription__2ZVPM\",\"ServiceInfo\":\"Services_ServiceInfo__MVhy_\",\"ServiceActions\":\"Services_ServiceActions__3RkSi\",\"ServiceRow\":\"Services_ServiceRow__3agqO\",\"ServicesHeader\":\"Services_ServicesHeader__2LPCb\",\"ServiceTitle\":\"Services_ServiceTitle__1a8Zq\",\"ACTIVE\":\"Services_ACTIVE__3FRaa\",\"INACTIVE\":\"Services_INACTIVE__1GmZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidebarContainer\":\"Sidebar_SidebarContainer__3R57t\",\"Header\":\"Sidebar_Header__3U273\",\"Title\":\"Sidebar_Title__kJ1-7\",\"SubTitle\":\"Sidebar_SubTitle__2AFMJ\",\"Routes\":\"Sidebar_Routes__2ZRyQ\",\"Route\":\"Sidebar_Route__1PSoy\",\"ActiveRoute\":\"Sidebar_ActiveRoute__2Vc0c\",\"RouteLabel\":\"Sidebar_RouteLabel__2c-0o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Type\":\"GeometryParam_Type__b6rg0\",\"GeomParam\":\"GeometryParam_GeomParam__2wSuL\",\"Geom\":\"GeometryParam_Geom__H3M6Q\",\"Icon\":\"GeometryParam_Icon__2h3jH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IntervalContainer\":\"IntervalParam_IntervalContainer__uEoEN\",\"DateSelector\":\"IntervalParam_DateSelector__26FvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MapContainer\":\"Map_MapContainer__DjkX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToastContainer\":\"Toast_ToastContainer__3cdXy\"};","import { Toast } from \"../../components/Toasts/toast.model\";\n\nexport interface UiState {\n    interaction: UiInteractionType,\n    toasts: Toast[]\n}\n\nexport enum UiInteractionType {\n    NONE,\n    POLYGON\n}\n\nexport const UI_INITIAL_STATE: UiState = {\n    interaction: UiInteractionType.NONE,\n    toasts: []\n}\n\n","import {OpenEOProcess } from \"../../interfaces/OpenEOProcess\";\n\nexport interface ParamsState {\n    feature: any,\n    process: OpenEOProcess | undefined\n}\n\nexport const PARAMS_INITIAL_STATE: ParamsState = {\n    feature: undefined,\n    process: undefined\n}\n\n","import { createSlice } from '@reduxjs/toolkit'\nimport {OpenEOProcess, OpenEOProcessParam } from '../../interfaces/OpenEOProcess';\nimport { ParamsState, PARAMS_INITIAL_STATE } from './params.model';\n\n\nexport const paramsSlice = createSlice({\n    name: 'params',\n    initialState: PARAMS_INITIAL_STATE,\n    reducers: {\n        setFeature: (state: ParamsState, action: {payload: any}) => {\n            state.feature = action.payload;\n        },\n        setProcess: (state: ParamsState, action: {payload: OpenEOProcess}) => {\n            state.process = action.payload\n        },\n        updateProcessParam: (state: ParamsState, action: {payload: OpenEOProcessParam}) => {\n            if (state.process) {\n                state.process = {\n                    ...state.process,\n                    parameters: state.process.parameters.map((p: OpenEOProcessParam) => p.name === action.payload.name ? action.payload : p)\n                }\n            }\n        }\n    },\n})\n\nexport const { setFeature, setProcess, updateProcessParam } = paramsSlice.actions\n\nexport default paramsSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Toast, TOAST_DEFAULT_DURATION } from '../../components/Toasts/toast.model';\nimport {UiInteractionType, UiState, UI_INITIAL_STATE } from './ui.model'\n\nexport const uiSlice = createSlice({\n    name: 'ui',\n    initialState: UI_INITIAL_STATE,\n    reducers: {\n        setInteractionType: (state: UiState, action: {payload: UiInteractionType}) => {\n            state.interaction = action.payload\n        },\n        addToast: (state: UiState, action: { payload: Toast}) => {\n            state.toasts = [...state.toasts, {...action.payload, duration: TOAST_DEFAULT_DURATION}];\n        },\n        removeToast: (state: UiState, action: { payload: string}) => {\n            state.toasts = state.toasts.filter((t: Toast) => t.id !== action.payload);\n        }\n    },\n})\n\nexport const { setInteractionType, addToast, removeToast } = uiSlice.actions\n\nexport default uiSlice.reducer\n","export interface Toast {\n    id: string;\n    text: string;\n    type: string;\n    duration?: number;\n}\n\nexport const TOAST_DEFAULT_DURATION = 5000;\n","import {Control} from \"leaflet\";\nimport React, {useEffect, useRef, useState} from \"react\"\nimport {FeatureGroup, useMap} from \"react-leaflet\";\nimport {EditControl} from \"react-leaflet-draw\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStore} from \"../../../stores/app.model\";\nimport {UiInteractionType} from \"../../../stores/ui/ui.model\";\nimport { FeatureGroup as LeafletFeatureGroup } from 'leaflet';\nimport { setFeature } from \"../../../stores/params\";\nimport { setInteractionType } from \"../../../stores/ui\";\n\n\nexport interface DrawLayerProps {\n    interaction: UiInteractionType;\n}\n\nconst DrawLayer = (props: DrawLayerProps) => {\n    const dispatch = useDispatch();\n    const map = useMap();\n    const [geometry, setGeometry] = useState(undefined);\n    const drawRef = useRef<Control>();\n    const layerRef = useRef<LeafletFeatureGroup>(null);\n\n    const feature: any = useSelector((state: AppStore) => state.params.feature)\n\n    useEffect(() => {\n        if (drawRef.current) {\n            if (props.interaction === UiInteractionType.NONE) {\n                map.removeControl(drawRef.current);\n            } else {\n                map.addControl(drawRef.current);\n            }\n        }\n    }, [map, props.interaction]);\n\n    useEffect(() => {\n        if (!feature && layerRef.current) {\n            layerRef.current.clearLayers();\n        }\n    }, [feature]);\n\n    useEffect(() => {\n        dispatch(setFeature(geometry))\n        dispatch(setInteractionType(UiInteractionType.NONE))\n    }, [dispatch, geometry]);\n\n    return (\n        <FeatureGroup ref={layerRef}\n        >\n            <EditControl\n                onMounted={(ctl: Control) => drawRef.current = ctl}\n                onCreated={(event: any) => setGeometry(event.layer.toGeoJSON())}\n                position=\"topright\"\n                draw={{\n                    polyline: false,\n                    polygon: true,\n                    rectangle: true,\n                    circle: false,\n                    marker: false,\n                    circlemarker: false\n                }}\n            />\n        </FeatureGroup>\n    )\n}\n\nexport default DrawLayer\n","import React from 'react';\nimport {MapContainer, TileLayer} from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport styles from './Map.module.css';\nimport {UiInteractionType} from '../../stores/ui/ui.model';\nimport {useSelector} from 'react-redux';\nimport {AppStore} from '../../stores/app.model';\nimport DrawLayer from './Layers/DrawLayer';\n\n\n\nconst Map = () => {\n    const interactionType: UiInteractionType = useSelector((state: AppStore) => state.ui.interaction)\n    return (\n        <MapContainer className={styles.MapContainer} center={[50.7191078335712, 4.721902473674258]} zoom={8}\n                      zoomControl={false}>\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <DrawLayer interaction={interactionType}></DrawLayer>\n        </MapContainer>\n    )\n}\n\nexport default Map;\n","import React  from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { SidebarProps, SidebarRoute } from \"./Sidebar.model\";\nimport styles from './Sidebar.module.css';\n\nconst Sidebar = (props: SidebarProps) => {\n    let location = useLocation();\n    return (\n        <div className={styles.SidebarContainer}>\n            <div className={styles.Header}>\n                <div className={styles.Title}>OpenEO</div>\n                <div className={styles.SubTitle}>Service playground</div>\n            </div>\n            <div className={styles.Routes}>\n                {\n                    props.routes.map((r: SidebarRoute) => (\n                        <Link className={[styles.Route, location.pathname === r.route ? styles.ActiveRoute : ''].join(' ')} to={r.route}>{r.icon} <span className={styles.RouteLabel}>{r.label}</span></Link>\n                    ))\n                }\n            </div>\n        </div>\n    )\n\n}\n\nexport default Sidebar;\n","import { Toast} from \"./toast.model\";\nimport styles from './Toast.module.css';\nimport {Alert} from 'react-bootstrap';\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeToast } from \"../../stores/ui\";\n\nconst Toasts = (props: { toasts: Toast[]}) => {\n\n    const scheduled = useRef<string[]>([]);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n       props.toasts.forEach((t: Toast) => {\n           if (!scheduled.current.includes(t.id) && t.duration) {\n               scheduled.current = [...scheduled.current, t.id];\n               setTimeout(() => {\n                   dispatch(removeToast(t.id))\n               }, t.duration);\n           }\n       })\n    }, [props.toasts, dispatch]);\n\n\n    return (\n        <div className={styles.ToastContainer}>\n            {\n                props.toasts.map((t: Toast) => (\n                    <Alert key={t.id} variant={t.type}>\n                        {t.text}\n                    </Alert>\n                ))\n            }\n        </div>\n    );\n}\n\n\n\n\n\nexport default Toasts;\n","\nexport const CamelCase = (text: string): string => text.charAt(0).toUpperCase() + text.slice(1);\n","import React, {useEffect, useState } from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport { FaDownload } from 'react-icons/fa';\nimport {downloadJobResult, getJobs, getLogs } from '../../services/OpenEO';\nimport { CamelCase } from '../../services/Utils.t';\nimport styles from './Jobs.module.css';\n\n\nconst _getJobs = (setJobs: Function, setLoading: Function)  => {\n    setLoading(true);\n    getJobs()\n        .then((jobs: any) => {\n            setJobs(jobs)\n        })\n        .finally(() => setLoading(false));\n}\n\nconst _getLogs = (id: string, setLogs: Function, setLoading: Function)  => {\n    setLoading(true);\n    getLogs(id)\n        .then((logs: string[]) => {\n            setLogs(logs);\n        })\n        .finally(() => setLoading(false));\n}\n\nconst _dowloadResult = (id: string) => {\n    downloadJobResult(id)\n        .then((result: any) => {\n            console.log(result)\n        })\n}\n\nconst toggleExpanded = (id: string, expanded: string | undefined, setExpanded: Function) => {\n    if (expanded === id) {\n        setExpanded(undefined);\n    } else {\n        setExpanded(id);\n    }\n}\nconst Jobs = () => {\n    const [jobs, setJobs] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [expanded, setExpanded] = useState<string | undefined>(undefined);\n    const [logs, setLogs] = useState<string[]>([]);\n\n\n    useEffect(() => {\n        _getJobs(setJobs, setLoading);\n    }, []);\n\n    useEffect(() => {\n        if (expanded) {\n            setLogs([]);\n            _getLogs(expanded, setLogs, setLoading);\n        }\n    }, [expanded])\n\n    return (\n        <div className={styles.JobsContainer}>\n            <div className={styles.JobsHeader}>\n                <h3>Jobs</h3>\n                <Button onClick={() => _getJobs(setJobs, setLoading)} disabled={loading}>\n                    {\n                        loading ? (\n                                <Spinner animation=\"border\"/>\n                            ) :\n                            'Refresh'\n                    }\n                </Button>\n            </div>\n            <div className={styles.JobList}>\n                {\n                    jobs.map((j: any) => (\n                        <div className={styles.Job} onClick={() => toggleExpanded(j.id, expanded, setExpanded)}>\n                            <div className={styles.JobRow}>\n                                <div className={styles.JobDate}>\n                                    {j.created}\n                                </div>\n                                <div className={styles.JobInfo}>\n                                    <div className={styles.JobTitle}>\n                                        {j.title || 'Job'}\n                                    </div>\n                                    <div className={styles.JobDescription}>\n                                        {j.description || ''}\n                                    </div>\n                                </div>\n                                <div className={styles.JobActions}>\n                                    {\n                                        j.status === 'finished' ? (\n                                            <FaDownload onClick={() => _dowloadResult(j.id)}/>\n                                        ) : ''\n                                    }\n                                </div>\n                                <div className={styles.JobDuration}>\n                                    {j.duration_human_readable || ''}\n                                </div>\n                                <div className={styles[CamelCase(j.status)]}>\n                                    {CamelCase(j.status)}\n                                </div>\n                            </div>\n                            {\n                                expanded === j.id ? (\n                                    <div className={styles.JobRow}>\n                                        <div className={styles.JobLogs}>\n                                            {\n                                                logs.length > 0 ? logs.map((l: string) => (\n                                                    <span>{l}</span>\n                                                )) : <span>No logs available</span>\n                                            }\n                                        </div>\n                                    </div>\n                                ): ''\n                            }\n\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Jobs\n\n","import React from \"react\";\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\n\nconst DateTimeParam = (props: any) => {\n    return (\n        <Datetime value={props.value} onChange={(event: any) => props.setValue(event.format('YYYY-MM-DD'))}\n                  timeFormat={false}\n                  dateFormat={'YYYY-MM-DD'} />\n    )\n};\n\nexport default DateTimeParam;\n","import React, {useEffect, useState } from \"react\";\nimport DateTimeParam from \"../DateTime/DataTimeParam\";\nimport styles from './IntervalParam.module.css';\n\n\nconst IntervalParam = (props: any) => {\n    const [interval, setInterval] = useState([undefined, undefined])\n\n    useEffect(() => {\n       if (interval[0] && interval[1]) {\n           props.setValue(interval);\n       }\n    }, [interval, props]);\n\n    return (\n        <div className={styles.IntervalContainer}>\n            <div className={styles.DateSelector}>\n                <DateTimeParam value={props.value? props.value[0] : undefined} setValue={(event: any) => setInterval([event, interval[1]])}></DateTimeParam>\n            </div>\n            <div className={styles.DateSelector}>\n                <DateTimeParam value={props.value? props.value[1] : undefined}  setValue={(event: any) => setInterval([interval[0], event])}></DateTimeParam>\n            </div>\n\n        </div>\n    )\n}\n\nexport default IntervalParam;\n","import React, { useEffect } from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport \"react-datetime/css/react-datetime.css\";\nimport {FaPencilAlt, FaTimes} from 'react-icons/fa';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CamelCase} from \"../../../../services/Utils.t\";\nimport { AppStore } from \"../../../../stores/app.model\";\nimport { setFeature } from \"../../../../stores/params\";\nimport {setInteractionType } from \"../../../../stores/ui\";\nimport { UiInteractionType } from \"../../../../stores/ui/ui.model\";\nimport styles from './GeometryParam.module.css';\nimport { GeometryParamProps } from \"./GeometryParamProps\";\n\n\n\nconst GeometryParam = (props: GeometryParamProps) => {\n    const feature: any = useSelector((state: AppStore) => state.params.feature)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        props.setValue(feature);\n    }, [feature, props]);\n\n    return (\n        <div className={styles.GeomParam}>\n            {\n                feature ? (\n                    <div className={styles.Geom}>\n                        <FaTimes className={styles.Icon} onClick={() => dispatch(setFeature(undefined))}/>\n                        {CamelCase(feature.type)}\n                    </div>\n                ) : ''\n            }\n            <Button onClick={() => dispatch(setInteractionType(UiInteractionType.POLYGON))} disabled={!!feature} >\n                <FaPencilAlt className={styles.Icon}/>\n                <span className={styles.Type}>{CamelCase(props.type)}</span>\n            </Button>\n        </div>\n\n    )\n}\n\nexport default GeometryParam;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport \"react-datetime/css/react-datetime.css\";\nimport { ParamProps } from \"../ParamProps.\";\n\nconst StringParam = (props: ParamProps) => {\n    return (\n    <Form.Control value={props.value || ''} onChange={(event: any) => props.setValue(event.target.value)}>\n    </Form.Control>\n    )\n}\n\nexport default StringParam;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport \"react-datetime/css/react-datetime.css\";\nimport { ParamProps } from \"../ParamProps.\";\n\nconst NumberParam = (props: ParamProps) => {\n    return (\n    <Form.Control type=\"number\" value={props.value || ''} onChange={(event: any) => props.setValue(event.target.value)}>\n    </Form.Control>\n    )\n};\n\nexport default NumberParam;\n","import React, {useEffect, useState} from 'react';\nimport styles from './Processes.module.css';\nimport {createPreviewService, getProcesses, executeProcess, buildProcessGraph} from \"../../services/OpenEO\";\nimport {OpenEOProcess, OpenEOProcessParam} from \"../../interfaces/OpenEOProcess\";\nimport {Button, Form, Spinner} from 'react-bootstrap';\nimport IntervalParam from './Params/IntervalParam/IntervalParam';\nimport GeometryParam from './Params/GeometryParam/GeometryParam';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {addToast} from '../../stores/ui';\nimport { AppStore } from '../../stores/app.model';\nimport { setProcess, updateProcessParam } from '../../stores/params';\nimport StringParam from './Params/StringParam/StringParam';\nimport NumberParam from './Params/NumberParam/NumberParam';\nimport ReactJson from 'react-json-view';\nimport { FaClipboard } from 'react-icons/fa';\n\n\nconst renderServiceSelect = (s: OpenEOProcess) => (\n    <option value={s.id} key={s.id}>{s.id}</option>\n)\n\nconst updateSelected = (event: any, services: OpenEOProcess[], dispatch: Function) => {\n    const service = services.find((s: OpenEOProcess) => s.id === event.target.value);\n    if (service) {\n        dispatch(setProcess(service));\n    }\n}\n\nconst copyToClipboard = (s: OpenEOProcess, dispatch: Function): void => {\n    navigator.clipboard.writeText(JSON.stringify(buildProcessGraph(s)));\n    dispatch(addToast({\n        id: 'copy_ok',\n        text: `Succesfully copied process graph to clipboard`,\n        type: 'success',\n        duration: 2000\n    }));\n\n}\nconst renderServiceInfo = (s: OpenEOProcess,\n                           loading: boolean,\n                           setLoading: Function,\n                           previewLoading: boolean,\n                           setPreviewLoading: Function,\n                           showGraph: boolean,\n                           setShowGraph: Function,\n                           dispatch: Function) => (\n    <div className={styles.ServiceInfo}>\n        <div className={styles.ServiceTitle}>{s.id}</div>\n        <div className={styles.Description}>{s.description}</div>\n        {\n            s ? s.parameters.map((p: OpenEOProcessParam) => renderParam(p, dispatch)) : ''\n        }\n\n        <div className={styles.Execute}>\n            <Button className={styles.ExecuteButton} disabled={!paramsValid(s.parameters) || previewLoading || loading}\n                    onClick={() => _executeService(s, setLoading, dispatch)}>\n                {\n                    loading ? (\n                            <Spinner animation=\"border\"/>\n                        ) :\n                        'Execute'\n                }\n            </Button>\n            <Button className={styles.ExecuteButton} disabled={!paramsValid(s.parameters) || previewLoading || loading}\n                    onClick={() => _generatePreview(s, setPreviewLoading, dispatch)}>\n                {\n                    previewLoading ? (\n                            <Spinner animation=\"border\"/>\n                        ) :\n                        'Preview'\n                }\n            </Button>\n        </div>\n        <div className={styles.ProcessGraph}>\n            <span className={styles.ProcessGraphToggle} onClick={() => setShowGraph(!showGraph)}>{\n                showGraph ? 'Hide' : 'Show'\n            } graph</span>\n        {\n            showGraph ? (\n                <div>\n                    <ReactJson src={buildProcessGraph(s)}></ReactJson>\n                    <div className={styles.ClipboardCopy} onClick={() => copyToClipboard(s, dispatch)}>\n                        Copy to clipboard\n                    </div>\n                </div>\n\n            ) : ''\n        }\n        </div>\n    </div>\n)\nconst _executeService = (p: OpenEOProcess, setLoading: Function, dispatch: Function): void => {\n    setLoading(true);\n    executeProcess(p)\n        .then((result: string) => {\n            dispatch(addToast({\n                id: 'service_execute',\n                text: `Succesfully executed service: ${result}`,\n                type: 'success'\n            }));\n        }).catch((error: string) => {\n        dispatch(addToast({\n            id: 'service_execute_error',\n            text: 'Something went wrong when executing service',\n            type: 'danger',\n        }))\n    }).finally(() => {\n        setLoading(false);\n    })\n}\n\nconst _generatePreview = (p: OpenEOProcess, setLoading: Function, dispatch: Function): void => {\n    setLoading(true);\n    createPreviewService(p)\n        .then((result: any) => {\n            console.log(\"RESULT\", result);\n            dispatch(addToast({\n                id: 'preview_success',\n                text: `Succesfully created preview service`,\n                type: 'success'\n            }));\n        }).catch((error: string) => {\n        dispatch(addToast({\n            id: 'preview_error',\n            text: 'Something went wrong when creating viewing service',\n            type: 'danger',\n        }))\n    }).finally(() => {\n        setLoading(false);\n    })\n}\n\nconst updateParam = (p: OpenEOProcessParam, value: any, dispatch: Function) => {\n    if (p.value !== value) {\n        dispatch(updateProcessParam({\n            ...p,\n            value\n        }));\n    }\n}\n\nconst renderParam = (p: OpenEOProcessParam, dispatch: Function) => (\n    <div className={styles.Param}>\n        <div className={styles.Title}>{p.name}</div>\n        <div>{p.description}</div>\n        <div className={styles.ParamInput}>\n            {\n                p.schema.type === 'temporal-intervals' ? (\n                    <IntervalParam value={p.value} setValue={(interval: any) => updateParam(p, interval, dispatch)}></IntervalParam>\n                ) : ''\n            }\n            {\n                p.schema.type === 'object' ? (\n                    <GeometryParam type=\"polygon\" setValue={(feature: any) => updateParam(p, feature, dispatch)}></GeometryParam>\n                ) : ''\n            }\n            {\n                p.schema.type === 'string' ? (\n                    <StringParam value={p.value} setValue={(text: any) => updateParam(p, text, dispatch)}></StringParam>\n                ) : ''\n            }\n            {\n                p.schema.type === 'number' ? (\n                    <NumberParam value={p.value} setValue={(text: any) => updateParam(p, text, dispatch)}></NumberParam>\n                ) : ''\n            }\n        </div>\n    </div>\n)\n\nconst paramsValid = (params: OpenEOProcessParam[]): boolean => params.filter((p: OpenEOProcessParam) => !p.value).length === 0;\n\nconst Processes = (props: any) => {\n    const [services, setServices]: [OpenEOProcess[], any] = useState([]);\n    const [execLoading, setExecLoading] = useState(false);\n    const [previewLoading, setPreviewLoading] = useState(false);\n    const [showGraph, setShowGraph] = useState(false);\n    const dispatch = useDispatch();\n    const selected: OpenEOProcess | undefined = useSelector((state: AppStore) => state.params.process);\n\n    useEffect(() => {\n        getProcesses()\n            .then((services: OpenEOProcess[]) => {\n                setServices(services);\n            });\n    }, []);\n\n    return (\n        <div className={styles.ServiceContainer}>\n            <div className={styles.ServiceSelect}>\n                <Form.Control as=\"select\" onChange={(event: any) => updateSelected(event, services, dispatch)}>\n                    <option selected disabled key='none'>Select a service</option>\n                    {\n                        services.map((s: OpenEOProcess) => renderServiceSelect(s))\n                    }\n                </Form.Control>\n            </div>\n            {selected ? renderServiceInfo(selected, execLoading, setExecLoading, previewLoading, setPreviewLoading, showGraph, setShowGraph, dispatch) : ''}\n        </div>\n    )\n}\n\nexport default Processes;\n","import React, {useEffect, useState} from 'react';\nimport {Button, Spinner} from 'react-bootstrap';\nimport {getServices} from '../../services/OpenEO';\nimport styles from './Services.module.css';\n\n\nconst _getServices = (setServices: Function, setLoading: Function) => {\n    setLoading(true);\n    getServices()\n        .then((Services: any) => {\n            setServices(Services)\n        })\n        .finally(() => setLoading(false));\n}\n\n\nconst toggleExpanded = (id: string, expanded: string | undefined, setExpanded: Function) => {\n    if (expanded === id) {\n        setExpanded(undefined);\n    } else {\n        setExpanded(id);\n    }\n}\n\nconst Services = () => {\n    const [services, setServices] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [expanded, setExpanded] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        _getServices(setServices, setLoading);\n    }, []);\n\n    useEffect(() => {\n        if (expanded) {\n        }\n    }, [expanded])\n\n    return (\n        <div className={styles.ServicesContainer}>\n            <div className={styles.ServicesHeader}>\n                <h3>Services</h3>\n                <Button onClick={() => _getServices(setServices, setLoading)} disabled={loading}>\n                    {\n                        loading ? (\n                                <Spinner animation=\"border\"/>\n                            ) :\n                            'Refresh'\n                    }\n                </Button>\n            </div>\n            <div className={styles.ServiceList}>\n                {\n                    services.map((s: any) => (\n                        <div className={styles.Service} onClick={() => toggleExpanded(s.id, expanded, setExpanded)}>\n                            <div className={styles.ServiceRow}>\n                                <div className={styles.ServiceDate}>\n                                    {s.created}\n                                </div>\n                                <div className={styles.ServiceInfo}>\n                                    <div className={styles.ServiceTitle}>\n                                        {s.title || 'Service'} - {s.type.toUpperCase()}\n                                    </div>\n                                    <div className={styles.ServiceDescription}>\n                                        {s.url || ''}\n                                    </div>\n                                </div>\n                                <div className={styles[s.enabled ? 'ACTIVE' : 'INACTIVE']}>\n                                    {s.enabled ? 'ACTIVE' : 'INACTIVE'}\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Services;\n\n","import React, { useEffect } from 'react';\nimport {useSelector} from 'react-redux';\nimport './App.css';\nimport Map from \"./components/Map/Map\";\nimport Sidebar from './components/Sidebar/Sidebar';\nimport {SidebarRoute} from './components/Sidebar/Sidebar.model';\nimport {Toast} from './components/Toasts/toast.model';\nimport Toasts from './components/Toasts/Toasts';\nimport {AppStore} from './stores/app.model';\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\nimport Jobs from './components/Jobs/Jobs';\nimport Processes from './components/Processes/Processes';\nimport {FaClipboardList, FaEye, FaPlay } from 'react-icons/fa';\nimport Services from './components/Services/Services';\n\n\nfunction App() {\n    const toasts: Toast[] = useSelector((state: AppStore) => state.ui.toasts)\n    const routes: SidebarRoute[] = [\n        {\n            label: 'Processes',\n            route: '/processes',\n            icon: (\n                <FaPlay className=\"Icon\"/>\n            )\n        },\n        {\n            label: 'Jobs',\n            route: '/jobs',\n            icon: (\n                <FaClipboardList className=\"Icon\"/>\n            )\n        },\n        {\n            label: 'Services',\n            route: '/services',\n            icon: (\n                <FaEye className=\"Icon\"/>\n            )\n        }];\n\n    useEffect(() => {\n       document.title = 'OpenEO Playground'\n    }, []);\n\n    return (\n        <Router>\n            <div className=\"MainContainer\">\n                <div className=\"SideBar\">\n                    <Sidebar routes={routes}/>\n                </div>\n                <div className=\"Content\">\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={() => {\n                                return (\n                                    <Redirect to=\"/processes\" />\n                                )\n                            }}\n                        />\n                        <Route path=\"/processes\">\n                            <div className=\"Services\">\n                                <Processes/>\n                            </div>\n                            <Map/>\n                            <div className=\"Toasts\">\n                                <Toasts toasts={toasts}></Toasts>\n                            </div>\n                        </Route>\n                        <Route path=\"/jobs\">\n                           <Jobs/>\n                        </Route>\n                        <Route path=\"/services\">\n                            <Services/>\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport uiReducer from './ui';\nimport paramsReducer from './params';\n\nexport default configureStore({\n    reducer: {\n        ui: uiReducer,\n        params: paramsReducer\n    }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport app from './stores/app';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={app}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}